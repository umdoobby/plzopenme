@model StickerViewModel

@{
    ViewBag.Title = Model.Link.Name;
    Layout = "_Layout";
    ViewData["Description"] = "Delivery! I have a sticker for you fresh from Telegram! Click here to view or download the file.";
    ViewData["Thumbnail"] = $"data/{Model.ThumbFile.Location}";
    ViewData["Url"] = $"file/{Model.Link.Link}";
}

<div class="container">
    <h2 class="text-wrap text-break">@Model.Link.Name</h2>
    <hr class="border-primary mb-3" />
    <div class="row mb-3">
        <div class="col-md-8">
            <div class="card border-primary mb-3 shadow">
                <div class="card-header">
                    <ul class="nav nav-pills small">
                        <li class="nav-item">
                            <a class="nav-link active" data-bs-toggle="tab" href="#originalSize">Original</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-bs-toggle="tab" href="#thumbnailViewer">Thumbnail</a>
                        </li>
                    </ul>
                </div>
                <div class="card-body vjs-fluid">
                    <div id="playerTabs" class="tab-content">
                        <div class="tab-pane fade active show" id="originalSize">
                            <div class="d-flex justify-content-center">
                                <img id="tme-photo" class="img-fluid mx-auto shadow" src="/data/@Model.File.Location" alt="@Model.Link.Name" />
                            </div>
                        </div>
                        <div class="tab-pane fade" id="thumbnailViewer">
                            <div class="d-flex justify-content-center">
                                <img id="tme-thumbnail" class="img-thumbnail mx-auto shadow" src="/data/@Model.ThumbFile.Location" alt="@Model.Link.Name Thumbnail" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card-footer small">
                    Uploaded: @Model.Link.AddedOn.ToString("R")
                </div>
            </div>
            <label for="permalink" class="form-label"><h6><i class="fas fa-link"></i>&nbsp;Permalink to this file:</h6></label>
            <div class="input-group mb-3 shadow">
                <input type="text" class="form-control font-monospace" onclick="this.select()" id="permalink" placeholder="Permalink" aria-label="PlzOpenMe Permalink" value="https://plzopen.me/File?id=@Model.Link.Link" readonly>
                <button class="btn btn-outline-success" type="button" id="permalink-copy" onclick="copyButtonClicked()"><i class="fas fa-copy"></i>&nbsp;Copy</button>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border-secondary mb-3 fs-6 shadow">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div><h6 class="m-0"><i class="fas fa-eye"></i>&nbsp;Views</h6></div>
                    <span class="badge bg-primary rounded-pill">@Model.Link.Views</span>
                </div>
            </div>
            <div class="card border-warning mb-3 shadow">
                <div class="card-body border-bottom border-warning">
                    <h6 class="card-title mb-0"><i class="fas fa-bolt"></i>&nbsp;Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <button class="btn btn-lg btn-success" type="button" data-bs-toggle="modal" data-bs-target="#modalShare"><i class="fas fa-share-alt"></i>&nbsp;Share</button>
                        <a class="btn btn-lg btn-primary" type="button" href="/data/@Model.File.Location" download="@Model.Link.Name">
                            <i class="fas fa-download"></i>&nbsp;Download
                        </a>
                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#modalReport"><i class="fas fa-flag"></i>&nbsp;Report</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card border-info mb-3 shadow">
                <div class="card-body">
                    <h6 class="card-title mb-0"><i class="far fa-chart-bar"></i>&nbsp;File Details</h6>
                </div>
                <ul class="list-group list-group-flush card-text small">
                    <li class="list-group-item">Entity: <span class="font-monospace">@Model.File.Type</span></li>
                    <li class="list-group-item">MIME type: <span class="font-monospace">@Model.File.Mime</span></li>
                    <li class="list-group-item">Size: <span class="font-monospace">@Model.File.Size Bytes</span></li>
                    <li class="list-group-item">Animated?: <span class="font-monospace">@Model.Sticker.IsAnimated.ToString()</span></li>
                    <li class="list-group-item">Emoji: <span class="font-monospace">@Model.Sticker.Emoji</span></li>
                    <li class="list-group-item">Set name: <span class="font-monospace">@Model.Sticker.SetName</span></li>
                    <li class="list-group-item">Mask point: <span class="font-monospace">@Model.Sticker.MaskPoint</span></li>
                    <li class="list-group-item">Mask shift X: <span class="font-monospace">@Model.Sticker.MaskShiftX</span></li>
                    <li class="list-group-item">Mask shift Y: <span class="font-monospace">@Model.Sticker.MaskShiftY</span></li>
                    <li class="list-group-item">Mask scale: <span class="font-monospace">@Model.Sticker.MaskScale</span></li>
                </ul>
            </div>
        </div>
    </div>
</div>

@section Css
{
    <!-- Viewer.js style sheet -->
    <link rel="stylesheet" href="~/lib/viewerjs/dist/viewer.min.css" />

    <!-- Custom style -->
    <style>
        #tme-photo {
            max-width: @Model.Sticker.Width.ToString()px;
            max-height: @Model.Sticker.Height.ToString()px;
            width: 100%;
            height: 100%;
        }
        
        #tme-thumbnail {
            max-width: @Model.ThumbPhoto.Height.ToString()px;
            max-height: @Model.ThumbPhoto.Height.ToString()px;
            width: 100%;
            height: 100%;
        }
    </style>
}

@section Modals
{
    

}

@section Scripts
{
    <!-- Viewer.js script -->
    <script src="~/lib/viewerjs/dist/viewer.min.js"></script>

    <!-- enable tool tips -->
    <script>
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
          return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    </script>

    <!-- initialize js objects-->
    <script>
        const viewerMain = new Viewer(document.getElementById("tme-photo"), {
          inline: false,
          viewed() {
            viewer.zoomTo(1);
          },
        });
        
        const viewerThumbnail = new Viewer(document.getElementById("tme-thumbnail"), {
          inline: false,
          viewed() {
            viewer.zoomTo(1);
          },
        });
        
        const copyButton = document.getElementById("permalink-copy");
        const copiedToolTip = new bootstrap.Tooltip(copyButton, {
                boundary: document.body,
                placement: 'top',
                animation: true,
                delay: { "show": 500, "hide": 100 },
                html: false,
                trigger: 'manual',
                fallbackPlacements: ['top', 'bottom', 'right', 'left'],
                sanitize: true,
                title: 'Copied!'
            });      
    </script>

    <!-- button functions -->
    <script>
        function copyButtonClicked() {
            var copyText = document.getElementById("permalink");
            copyText.select();
            copyText.setSelectionRange(0, 99999);
            document.execCommand("copy");
            copiedToolTip.show();
            setTimeout(function(){
                    copiedToolTip.hide();
                }, 3000);
        } 
    </script>
}
